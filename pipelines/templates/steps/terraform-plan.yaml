# Leave parameters empty. Will be filled by terraform-pipeline.yaml
parameters:
  stage: ""
  tfstate_storage_account_resource_group_name: ""
  tfstate_storage_account_name: ""
  tf_version: ""
  service_connection_name: ""
  project_name: ""
  working_path: ""


steps:
  - task: AzureCLI@2
    displayName: 'Create storage account for Terraform'
    inputs:
      azureSubscription: ${{ parameters.service_connection_name }}
      scriptType: 'bash'
      scriptLocation: inlineScript  
      inlineScript: |
        az storage account create --resource-group ${{ parameters.tfstate_storage_account_resource_group_name }} --name ${{ parameters.tfstate_storage_account_name }} --sku Standard_LRS --kind StorageV2 --encryption-services blob --access-tier Cool --allow-blob-public-access false
        az storage container create --name states --account-name ${{ parameters.tfstate_storage_account_name }}
        az storage container create --name plans --account-name ${{ parameters.tfstate_storage_account_name }}

  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
    displayName: "Install Terraform ${{ parameters.tf_version }}"
    inputs:
      terraformVersion: ${{ parameters.tf_version }}

  - task: Bash@3
    displayName: "Terraform check format"
    inputs:
      targetType: "inline"
      script: terraform fmt -check -recursive -diff ${{ parameters.working_path}}