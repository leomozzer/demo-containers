trigger:
  batch: true
  branches:
    include:
    - main
  paths:
    exclude: 
    - README.md
    - LICENSE
    - api
    - website
    include:
    - db
    - pipelines/database/azure-pipelines.yml

parameters:
  - name: azureContainerRegistry
    default: wttohsfacr.azurecr.io
  - name: azureSubscriptionEndpoint
    default: AzureDevOps

pool:
  vmImage: ubuntu-latest

stages:
  - stage: main
    jobs:
    - job: DockerComposeMySql
      steps:

      - template: ../templates/docker-compose/build.yml
        parameters:        
          azureSubscriptionEndpoint: ${{ parameters.azureSubscriptionEndpoint }}
          azureContainerRegistry: ${{ parameters.azureContainerRegistry }}
          dockerComposeFile: db/docker-compose.yml
          projectName: mysql
          qualifyImageNames: true

      - task: DockerCompose@0
        displayName: Push services
        inputs:
          action: Push services
          containerregistrytype: Azure Container Registry
          azureSubscriptionEndpoint: ${{ parameters.azureSubscriptionEndpoint }}
          azureContainerRegistry: ${{ parameters.azureContainerRegistry }}
          dockerComposeFile: db/docker-compose.yml
          projectName: mysql
          qualifyImageNames: true

      # - task: Docker@2
      #   inputs:
      #     containerRegistry: ${{ parameters.containerRegistry }}
      #     repository: 'api'
      #     command: 'buildAndPush'
      #     Dockerfile: '$(System.DefaultWorkingDirectory)/api/Dockerfile'
      #     tags: 'latest'

      # - task: Docker@2
      #   inputs:
      #     containerRegistry: ${{ parameters.containerRegistry }}
      #     repository: 'mysql'
      #     command: 'buildAndPush'
      #     Dockerfile: '$(System.DefaultWorkingDirectory)/api/db/Dockerfile'
      #     tags: 'latest'

      # - task: Docker@2
      #   inputs:
      #     containerRegistry: ${{ parameters.containerRegistry }}
      #     repository: 'website'
      #     command: 'buildAndPush'
      #     Dockerfile: '$(System.DefaultWorkingDirectory)/website/Dockerfile'
      #     tags: 'latest'
